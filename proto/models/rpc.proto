syntax = "proto3";
package bigsciencequiz;

import "question.proto";
import "gamestate.proto";
import "user.proto";
import "events.proto";
import "admin_rpc.proto";
import "bigscreen_rpc.proto";

option java_package = "club.eslcc.bigsciencequiz.proto";

message Empty {}

message IdentifyUserRequest {
    string deviceId = 1;
}

message IdentifyUserResponse {
    enum FailureReason {
        DO_NOT_EVER_USE_ME = 0;
        NO_FREE_TEAMS = 1;
    }
    FailureReason failureReason = 1;
    Team team = 2;
    GameState state = 3;
    string sentryDsn = 4;
}

message TeamReadyRequest {
    string teamName = 1;
}

message TeamReadyResponse {
    enum RegisterFailedReason {
        ALREADY_REGISTERED = 0;
        TEAM_NAME_TAKEN = 1;
    }
    oneof response {
        Team team = 1;
        RegisterFailedReason failureReason = 2;
    }
}

message GetGameStateRequest {

}

message GetGameStateResponse {
    GameState state = 1;
}

message AutocompleteMemberNameRequest {
    string partialName = 1;
}

message AutocompleteMemberNameResponse {
    repeated string names = 1;
}

message AnswerQuestionRequest {
    int32 answerId = 1;
}

message AnswerQuestionResponse {
    enum AnswerQuestionFailedReason {
        SUCCESS = 0;
        NOT_IDENTIFIED = 1;
        OUT_OF_RANGE = 2;
        INVALID_STATE = 3;
        ALREADY_ANSWERED = 4;
    }
    AnswerQuestionFailedReason failureReason = 1;
}

message UnknownRequestResponse {
    string request = 1;
}

message UnauthorisedRequestResponse {
    string reason = 1;
}

message GenericErrorResponse {
    string message = 1;
}

message RpcRequest {
    oneof request {
        IdentifyUserRequest identifyUserRequest = 1;
        TeamReadyRequest teamReadyRequest = 2;
        GetGameStateRequest getGameStateRequest = 3;
        AutocompleteMemberNameRequest autocompleteMemberNameRequest = 4;
        AnswerQuestionRequest answerQuestionRequest = 5;
        bigsciencequiz.admin.AdminGetQuestionsRequest adminGetQuestionsRequest = 101;
        bigsciencequiz.admin.AdminSetActiveQuestionRequest adminSetActiveQuestionRequest = 102;
        bigsciencequiz.admin.AdminResetStateRequest adminResetStateRequest = 103;
        bigsciencequiz.admin.AdminSetGameStateRequest adminSetGameStateRequest = 104;
        bigsciencequiz.bigscreen.BigscreenGetTeamsRequest bigscreenGetTeamsRequest = 201;
    }
}

message RpcResponse {
    oneof response {
        IdentifyUserResponse identifyUserResponse = 1;
        TeamReadyResponse teamReadyResponse = 2;
        GetGameStateResponse getGameStateResponse = 3;
        AutocompleteMemberNameResponse autocompleteMemberNameResponse = 4;
        AnswerQuestionResponse answerQuestionResponse = 5;
        bigsciencequiz.admin.AdminGetQuestionsResponse adminGetQuestionsResponse = 101;
        bigsciencequiz.admin.AdminSetActiveQuestionResponse adminSetActiveQuestionResponse = 102;
        bigsciencequiz.admin.AdminResetStateResponse adminResetStateResponse = 103;
        bigsciencequiz.admin.AdminSetGameStateResponse adminSetGameStateResponse = 104;
        bigsciencequiz.bigscreen.BigscreenGetTeamsResponse bigscreenGetTeamsResponse = 201;
        GenericErrorResponse genericErrorResponse = 997;
        UnauthorisedRequestResponse unauthorisedRequestResponse = 998;
        UnknownRequestResponse unknownRequestResponse = 999;
    }
}
